#key.uri                : URI for service with {attr} for attributes
#key.username           : the username to login to service (basic auth) *
#key.password           : the password for the service (basic auth)     *
#key.attributes         : the csv of attributes
#key.proxyHeaders       : a comma separated list of headers to add output. Can put placeholders for values to get local request attributes.
#key.cache              : how long to cache the information for that URI (with variables replaced) - not implemented yet
#key.auth               : The auth method. Default NONE. BASIC requires username & password. JWT requires all jwt fields.
#
# * : not required

#Wiscmail lookup
wiscmaillookup.uri=https://email-server.wisc.edu/some.json?action=listaccountInfo&account={uid}
wiscmaillookup.username=
wiscmaillookup.password=
wiscmaillookup.attributes=uid

#new stuff feed
newstuff.uri=https://example.com/feed.json?username={uid}&name={prefname}
newstuff.username=
newstuff.password=
newstuff.attributes=uid,prefname

#subreddit feed example
uwmadisonreddit.uri=https://www.reddit.com/r/uwmadison/hot.json
uwmadisonreddit.attributes=

# proxyHeaders example
someservice.uri=http://somewhere.wisc.edu/foo
someservice.username=user
someservice.password=pass
someservice.auth=BASIC
someservice.proxyHeaders=On-Behalf-Of: {wiscedupvi},Some-Other-Header: staticvalue

# see https://xx-csa.bbcollab.com/documentation
# and  http://tools.ietf.org/html/draft-jones-json-web-token
# and https://github.com/jwtk/jjwt
# for details
# jwt example
jwtservice.uri=http://example.com/api
jwtservice.jwt.granttype=somegranttypestring
jwtservice.jwt.issuer=bucky
jwtservice.jwt.subject=bucky
jwtservice.jwt.secret=shhhhh
jwtservice.jwt.ttl=10000
jwtservice.jwt.tokenurl=http://example.com/api/token
jwtservice.auth=JWT
